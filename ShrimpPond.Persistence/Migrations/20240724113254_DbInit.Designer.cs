// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShrimpPond.Persistence.DatabaseContext;

#nullable disable

namespace ShrimpPond.Persistence.Migrations
{
    [DbContext(typeof(ShrimpPondDbContext))]
    [Migration("20240724113254_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShrimpPond.Domain.EnvironmentPara", b =>
                {
                    b.Property<int>("EnvironmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvironmentId"), 1L, 1);

                    b.Property<int?>("PHValuePhId")
                        .HasColumnType("int");

                    b.Property<int?>("TemperatureValueTemperatureId")
                        .HasColumnType("int");

                    b.HasKey("EnvironmentId");

                    b.HasIndex("PHValuePhId");

                    b.HasIndex("TemperatureValueTemperatureId");

                    b.ToTable("EnvironmentPara");
                });

            modelBuilder.Entity("ShrimpPond.Domain.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"), 1L, 1);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseryPondPondId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UsedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FoodId");

                    b.HasIndex("NurseryPondPondId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("ShrimpPond.Domain.Medicine", b =>
                {
                    b.Property<int>("MedicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicineId"), 1L, 1);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseryPondPondId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UsedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MedicineId");

                    b.HasIndex("NurseryPondPondId");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("ShrimpPond.Domain.NurseryPond", b =>
                {
                    b.Property<string>("PondId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EnvironmentsEnvironmentId")
                        .HasColumnType("int");

                    b.Property<string>("PondHeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PondRadius")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeedId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShrimpAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ShrimpCertificate")
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<string>("ShrimpSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PondId");

                    b.HasIndex("EnvironmentsEnvironmentId");

                    b.ToTable("NurseryPond");
                });

            modelBuilder.Entity("ShrimpPond.Domain.PHValue", b =>
                {
                    b.Property<int>("PhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhId"), 1L, 1);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("PhId");

                    b.ToTable("PHValue");
                });

            modelBuilder.Entity("ShrimpPond.Domain.TemperatureValue", b =>
                {
                    b.Property<int>("TemperatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemperatureId"), 1L, 1);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("TemperatureId");

                    b.ToTable("TemperatureValue");
                });

            modelBuilder.Entity("ShrimpPond.Domain.EnvironmentPara", b =>
                {
                    b.HasOne("ShrimpPond.Domain.PHValue", "PHValue")
                        .WithMany()
                        .HasForeignKey("PHValuePhId");

                    b.HasOne("ShrimpPond.Domain.TemperatureValue", "TemperatureValue")
                        .WithMany()
                        .HasForeignKey("TemperatureValueTemperatureId");

                    b.Navigation("PHValue");

                    b.Navigation("TemperatureValue");
                });

            modelBuilder.Entity("ShrimpPond.Domain.Food", b =>
                {
                    b.HasOne("ShrimpPond.Domain.NurseryPond", null)
                        .WithMany("Foods")
                        .HasForeignKey("NurseryPondPondId");
                });

            modelBuilder.Entity("ShrimpPond.Domain.Medicine", b =>
                {
                    b.HasOne("ShrimpPond.Domain.NurseryPond", null)
                        .WithMany("Medicines")
                        .HasForeignKey("NurseryPondPondId");
                });

            modelBuilder.Entity("ShrimpPond.Domain.NurseryPond", b =>
                {
                    b.HasOne("ShrimpPond.Domain.EnvironmentPara", "Environments")
                        .WithMany()
                        .HasForeignKey("EnvironmentsEnvironmentId");

                    b.Navigation("Environments");
                });

            modelBuilder.Entity("ShrimpPond.Domain.NurseryPond", b =>
                {
                    b.Navigation("Foods");

                    b.Navigation("Medicines");
                });
#pragma warning restore 612, 618
        }
    }
}
